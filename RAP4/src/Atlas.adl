CONTEXT RAP IN ENGLISH

-- rule to notify something (the TType in this case) is missing
-- ROLE User MAINTAINS conceptMustHaveTType
-- RULE conceptMustHaveTType : I[Concept] |- ttype[Concept*TType];V
-- VIOLATION ( TXT "The TType of Concept ",   SRC name[Concept*ConceptName],   TXT " is not defined\n")
-- VIOLATION (TXT "{EX} InsPair;seqFirstItem;Sequence;", TGT I, TXT ";Item;", SRC I)

-- rule to notify something (the Definition in this case) is missing
-- todo!!!


-------- CONCEPT --------
-- notify the user ConceptName is missing
-- ROLE User MAINTAINS conceptMustHaveName 
-- RULE conceptMustHaveName : I[Concept] |- name[Concept*ConceptName];V
-- VIOLATION ( TXT "The name of a Concept is not defined: ",   SRC I[Concept] ,   TXT "\n")  -- hier zou de origin nog bijkunnen
-- Concept definition
ROLE User MAINTAINS conceptShouldHaveDefinition 
RULE conceptShouldHaveDefinition : I[Concept];(I-name;"ONE";name~) |- concept[ConceptDef*Concept]~;V
MESSAGE "Definition of CONCEPT was not defined!"
VIOLATION (TXT "{EX} InsPair;concept;Concept;", SRC I, TXT ";ConceptDef;MeaningMarkup;MarkupText;OBJECT")

-- trigger ExecEngine to create an temp atom when ConceptName or TType  is missing
-- ConceptName
ROLE ExecEngine MAINTAINS conceptTempFillName
RULE conceptTempFillName : I[Concept] |- name[Concept*ConceptName];V
MESSAGE "Name of Concept was not defined, automatically set to a temp name" 
VIOLATION (   TXT "{EX} InsAtom;ConceptName"
            , TXT "{EX} InsPair;name;Concept;", SRC I, TXT ";ConceptName;TempName")

-- concept[ConceptDef*Concept]~;meaning[ConceptDef*Meaning];markup[Meaning*MarkupText];text[Markup*MarkupText] 

-- TType
ROLE ExecEngine MAINTAINS conceptFillTType
RULE conceptFillTType : I[Concept] |- ttype[Concept*TType];V
MESSAGE "Type of CONCEPT was not defined, automatically set to OBJECT" 
VIOLATION (TXT "{EX} InsPair;ttype;Concept;", SRC I, TXT ";TType;OBJECT")


ROLE ExecEngine MAINTAINS markupFillText
RULE markupFillText : I[Markup] |- text[Markup*MarkupText];V
MESSAGE "text of markup was not defined, automatically set to temp" 
VIOLATION ( TXT "{EX} InsAtom;MarkupText"
            ,TXT "{EX} InsPair;text;Markup;", SRC I, TXT ";MarkupText;TempName")

-- -- Purpose
-- ROLE ExecEngine MAINTAINS conceptCreatePurpose
-- RULE conceptCreatePurpose : I[Concept] |- purpose[Concept * Purpose];V
-- MESSAGE "Type of CONCEPT was not defined, automatically set to OBJECT" 
-- VIOLATION (   TXT "{EX} InsAtom;Purpose"
--               , TXT "{EX} InsAtom;Markup"
--               , TXT "{EX} InsAtom;MarkupText"
--               , TXT "{EX} InsPair;purpose;Concept;", SRC I, TXT ";Purpose;_NEW"
--               , TXT "{EX} InsPair;explMarkup;Purpose;_NEW;Markup;_NEW"
--               , TXT "{EX} InsPair;text;Markup;_NEW;MarkupText;_NEW"
--               )


-------- RELATION --------
-- notify the user RelationName src[..,Concept|- or tgt[..,Concept]  is missing
-- RelationName
ROLE User MAINTAINS relationMustHaveName 
RULE relationMustHaveName : I[Relation] |- name[Relation*RelationName];V
VIOLATION ( TXT "The name of a Relation is not defined: ",   SRC I[Relation] ,   TXT "\n")  -- hier zou de origin nog bijkunnen

-- src[Signature*Concept]
ROLE User MAINTAINS relationMustHaveSource 
RULE relationMustHaveSource : I[Signature] |- src[Signature*Concept];V
VIOLATION ( TXT "The source of a Relation is not defined: ",   SRC sign[Relation*Signature]~ ,   TXT "\n")  -- hier zou de origin nog bijkunnen

-- tgt[Signature*Concept]
ROLE User MAINTAINS relationMustHaveTarget 
RULE relationMustHaveTarget : sign[Relation*Signature] |- sign[Relation*Signature];src[Signature*Concept];V
VIOLATION ( TXT "The target of a Relation is not defined: ",   TGT sign[Relation*Signature]~ ,   TXT "\n")  -- hier zou de origin nog bijkunnen

-- automatically create a signature when Relation is created
ROLE ExecEngine MAINTAINS relationCreateSign
RULE relationCreateSign : I[Relation] |- sign[Relation*Signature];V
MESSAGE "Sign of Relation was not defined, automatically set to empty signatrue" 
VIOLATION (   TXT "{EX} InsAtom;Signature"
            , TXT "{EX} InsPair;sign;Relation;", SRC I, TXT ";Signature;_NEW" )


-- automatically create a name when Relation is created
ROLE ExecEngine MAINTAINS relationCreateName
RULE relationCreateName : I[Relation] |- name[Relation*RelationName];V
MESSAGE "Sign of Relation was not defined, automatically set to empty signatrue" 
VIOLATION (   TXT "{EX} InsAtom;RelationName"
            , TXT "{EX} InsPair;sign;Relation;", SRC I, TXT ";RelationName;_NEW" )



-------- RULE --------
-- notify the user RuleName is missing
ROLE User MAINTAINS ruleMustHaveName 
RULE ruleMustHaveName : I[Rule] |- name[Rule*RuleName];V
VIOLATION ( TXT "The name of a Rule is not defined: ",   SRC I[Rule] ,   TXT "\n")  -- hier zou de origin nog bijkunnen


-- elke propertyrule moet een relatie hebben, anders moet het weg! zoals de regel hieronder
-- ROLE ExecEngine MAINTAINS "del unused ShowADL"
-- RULE "del unused ShowADL" : I[ShowADL] |- (showADL[Term*ShowADL]~;showADL[Term*ShowADL]) \/ (showADL[PairView*ShowADL]~;showADL[PairView*ShowADL])
-- MEANING "A ShowADL without Term or PairView will be removed."
-- VIOLATION ( TXT "{EX}_;DelAtom_;ShowADL_;", SRC I )


VIEW ShowConceptualDiagramSmall: FileObject { imgfile : filePath}
HTML TEMPLATE "ShowConceptualDiagramSmall.html"
ENDVIEW



INTERFACE ATLASConcept : I[Concept] CRUD BOX <TABLE sortable sortby desc>
    [ info : I cRud BOX 
        [ name          : name[Concept*ConceptName]                                 CRUD
          , definition  : concept[ConceptDef*Concept]~;meaning[ConceptDef*Meaning];markup  INTERFACE "ATLASeditText"
          , type        : ttype[Concept*TType]                                      cRud
          -- , "Purpose:" : purpose[Concept*Purpose]          CRUD
        ]
      , diagram : I cRud BOX <TABLE> [
        usedin : source[Relation*Concept]~ \/ target[Relation*Concept]~ cRud
      ,  ""      :  conceptualDiagram[Concept*FileObject] cRud <ShowConceptualDiagramSmall>
    ]
  ]



INTERFACE ATLASRelation : I[Relation] CRUD BOX <TABLE>
  [ info : I cRud BOX
    [ name                : name[Relation*RelationName]                               cRUd
      , "" : I cRUd BOX <TABLE> 
      [   
        sign              : sign[Relation*Signature]                                  CRUd BOX <TABLE>
            [ Source       : src[Signature*Concept]                                    cRUd
            , Target       : tgt[Signature*Concept]                                    cRUd
            ]
        , prop              : prop[Relation*Property] CRUD
      ]
      , meaning           : decMean[Relation*Meaning];markup    INTERFACE "ATLASeditText"
      
    ]
    , diagram : I cRUd BOX <TABLE>
    [ "" : conceptualDiagram[Relation*FileObject] cRud  <ShowConceptualDiagramSmall>
      ]
  ]

INTERFACE ATLASRule : I[Rule] CRUD BOX
  [ 
      name            : name[Rule*RuleName]                               cRUd
      , regel : I[Rule]                                                   cRud
      , "Formele expressie" : formalTerm                                  CRUD
      , meaning       : meaning[Rule*Meaning];markup                      INTERFACE "ATLASeditText"    -- Actual text of the meaning
      --, message       : message[Rule*Message];markup;text               cRud    -- todo: Message of the rule
      , message       : message[Rule*Message]                             cRUd    -- todo: Message of the rule
      , violation     : rrviol[Rule*PairView]                             BOX <FORMnoformat hideLabels> [
          text   : showADL[PairView*ShowADL]                              CRUD    -- todo: zou moeten werken in theorie
        ]
  ]

 INTERFACE ATLASPurpose : I[Purpose] cRud BOX
  [          
        "element"     : purpose[Concept*Purpose]~;name
                        \/ purpose[Relation*Purpose]~;name
                        \/ purpose[Rule*Purpose]~;name
                        \/ purpose[Pattern*Purpose]~;name                     cRUd      
        , meaning     : explMarkup[Purpose*Markup]                            INTERFACE "ATLASeditText"
  ]


  INTERFACE ATLASeditText : I[Markup] CRud BOX <FORMnoformat hideLabels>
  [
      text : text[Markup*MarkupText] CRUD 
  ]


ENDCONTEXT







