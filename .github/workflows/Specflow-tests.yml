name: Specflow tests

on:
  push:
    branches:
      - feature/Specflow-test-pipeline

jobs:
  Build_Docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      #   - name: build docker
      #     id: update-image
      #     shell: bash
      #     run: |
      #       cd ./RAP4
      #       docker build -t ampersandtarski/ampersand-rap:dev-latest .
      #       cd ..
      #       cp .example.env .env
      #       docker compose build
      #       docker network create proxy
      #       docker network create rap_db
      #       docker compose up -d

      - name: Navigate to test project
        id: navigate-to-test-project
        shell: bash
        run: |
          cd ./Testing/SpecFlow/SpecFlowRAP/SpecFlowCalculator.Specs
      #   - name: Run tests
      #     uses: actions/cryptic-wizard/run-specflow-tests@v1.3.1
      #     with:
      #       test-assembly-path: Testing/SpecFlow/SpecFlowRAP/SpecFlowCalculator.Specs/
      #       test-assembly-dll: SpecFlowRAP.Specs.dll
      #       output-html: MyTestResults.html
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "6.0.x"

      - name: ls -l
        shell: bash
        run: |
          ls -l

      - name: BuildDotnetApp
        shell: bash
        run: |
          dotnet build ./Testing/SpecFlow/SpecFlowRAP/SpecFlowCalculator.Specs/SpecFlowRAP.Specs.csproj -c Release -v minimal -f net6.0

      - name: RunSpecFlowTests
        shell: bash
        continue-on-error: true
        run: |
          _args=()
          _logger_args=()
          [ "Release" != 'null' ] && _args+=("-c" "Release")
          [ "minimal" != 'null' ] && _args+=("-v" "minimal")
          [ "net6.0" != 'null' ] && _args+=("-f" "net6.0")
          [ "normal" != 'null' ] && _logger_args+=(";verbosity=normal")
          [ "MyTestResults.trx" != 'null' ] && _logger_args+=(";LogFileName=MyTestResults.trx")
          [ "trx" != 'null' ] && _args+=("-l" "trx$(IFS=; echo "${_logger_args[@]}")")

          dotnet test --no-build -c Release -v minimal -f net6.0 -v normal

    #   cd ../RAP4USER
    #   docker build -t ampersandtarski/rap4-student-prototype:dev-latest .
