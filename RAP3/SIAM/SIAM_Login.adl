CONTEXT "Login" IN ENGLISH LATEX
PURPOSE CONTEXT "Login"
{+Het 'inloggen' (van een user in een session) bestaat uit 
\begin{itemize}
\item het identificeren van een Account en 
\item het vaststellen dat de gebruiker van de sessie bij dit Account hoort (authenticeren)
\end{itemize}
Als dat is gebeurd kan dat Account met de session worden geassocieerd, om vervolgens de session context hiermee op te bouwen. Het 'uitloggen' (van een user uit een session) bestaat uit het verwijderen van de session (en daarmee de hele context). Daarmee wordt voorkomen dat een andere user later in die session zal gaan inloggen en mogelijk misbruik zou kunnen maken van wat er zoal in de context is bepaald. Dit is ook wenselijk omdat hiermee altijd ondubbelzinnig duidelijk is wie voor (de handelingen in) welke session verantwoordelijk is. Dit hoofdstuk beschrijft de betreffende functionaliteit, die (op het inloggen na) volledig geautomatiseerd verloopt.-+}

-- IDENT Accounts: Account(accUserid,accPassword) -- Only needed when accUserid is not [INJ]
RELATION accUserid[Account*UserID]   [INJ,UNI,TOT] -- This UserID is the name of the Account, and identifies the account.
MEANING "An Account registers a pseudonym for whatever the Account applies to"
RELATION accPassword[Account*Password] [UNI] -- Not TOT, because we want to facilitate external logins.
MEANING "An Account registers a password for whatever the Account applies to"
RELATION sessionAccount[SESSION*Account] [UNI]
MEANING "A SESSION may be linked to an Account, which specifies the (user)context of the session."
RELATION accIsInitialized[Account*Account] [PROP]
MEANING "An account may have the property that it is initialized (e.g. some default values have been set)"
RELATION accIsActive[Account*Account] [PROP]
MEANING "An Account may have the property that it is active, meaning that it can be used to login"
RELATION accDeactivateReq[Account*Account] [PROP] -- An Account may have the property of being deactivated once it is not/no longer a sessionAccount
MEANING "A request may exist to deactivate the account (as soon as it is no longer a sessionAccount)"

RULE "At least one account must exist that is active": V[Account];accIsActive;V[Account] -- This error allows modelers/users to become aware of the fact that account activation is currently required.

RELATION sessionUserid[SESSION*UserID] [UNI]
MEANING "In a SESSION, the userid (i.e. the name/text that identifies the Account that is used to login) may be known."
ROLE ExecEngine MAINTAINS "Determine the 'userid' in a session"
RULE "Determine the 'userid' in a session": sessionAccount;accUserid |- sessionUserid
VIOLATION (TXT "{EX} InsPair;sessionUserid;SESSION;", SRC I, TXT ";UserID;", TGT I)
ROLE ExecEngine MAINTAINS "Undetermine the 'userid' in a session"
RULE "Undetermine the 'userid' in a session": sessionUserid |- sessionAccount;accUserid
VIOLATION (TXT "{EX} DelPair;sessionUserid;SESSION;", SRC I, TXT ";UserID;", TGT I)

--[Account (de)activation]--
ROLE ExecEngine MAINTAINS "Active accounts are initialized"
RULE "Active accounts are initialized": accIsActive |- accIsInitialized
VIOLATION (TXT "{EX} InsPair;accIsInitialized;Account;", SRC I, TXT ";Account;", TGT I)

ROLE ExecEngine MAINTAINS "Sessions with an inactive sessionaccount may not exist"
RULE "Sessions with an inactive sessionaccount may not exist": sessionAccount |- sessionAccount;accIsActive
VIOLATION (TXT "{EX} DelAtom;SESSION;", SRC I) -- i.e.: logout.

ROLE ExecEngine MAINTAINS "Service deactivation request"
RULE "Service deactivation request": accDeactivateReq |- sessionAccount~;sessionAccount
VIOLATION (TXT "{EX} DelPair;accIsActive;Account;", SRC I, TXT ";Account;", TGT I
          ,TXT "{EX} DelPair;accDeactivateReq;Account;", SRC I, TXT ";Account;", TGT I)

--[Login, Logout]--

RELATION loginUserid[SESSION*UserID] [UNI]
RELATION loginPassword[SESSION*Password] [UNI]
RELATION logoutRequest[SESSION*SESSION] [PROP]

RULE "Authenticate user": loginUserid~;loginPassword |- accUserid~;accPassword
MESSAGE "You may only login with valid credentials (username/password)."
VIOLATION (TXT "The UserID or Password do not match. Please try again.")
--VIOLATION (TXT "Voor de combinatie UID/PW = ('", SRC I, TXT "','", TGT I, TXT "') bestaat geen account.")

--ROLE ExecEngine MAINTAINS "U/PW Login"
--RULE "U/PW Login": (loginUserid;accUserid~ /\ loginPassword;accPassword~);accIsActive |- sessionAccount
--MEANING "When a user is authenticated, the corresponding Account will become the sessionAccount (provided it is active)."
--VIOLATION (TXT "{EX} InsPair;sessionAccount;SESSION;", SRC I, TXT ";Account;", TGT I
--          ,TXT "{EX} DelPair;loginUserid;SESSION;", SRC I, TXT ";UserID;", SRC loginUserid
--          ,TXT "{EX} DelPair;loginPassword;SESSION;", SRC I, TXT ";Password;", SRC loginPassword -- Passwords moet je niet willen onthouden.
--          )

ROLE ExecEngine MAINTAINS "Logout"
RULE "Logout": "_SESSION";logoutRequest |- -V 
MEANING "A request to logout in a session must be processed in that session."
VIOLATION (TXT "{EX} DelAtom;SESSION;", SRC I)

--[Glossary]--

PURPOSE CONCEPT Account
{+Als iemand inlogt in het systeem moet diens 'context' worden geactiveerd, d.w.z. de gegevens over de persoon die het systeem nodig heeft om te kunnen berekenen wat hij/zij wel en niet mag doen, en welke gegevens van het systeem daarbij mogen worden gebruikt. Om zulke computations te kunnen maken wordt een aantal zaken geregistreerd en aan één persoon gekoppeld.+}
CONCEPT Account "een verzameling gegevens die (een deel van) de gebruikerscontext van één gebruiker binnen het systeem beschrijft"

PURPOSE CONCEPT UserID
{+Het UserID (gebruikersnaam) van een account identificeert dat account en impliciet daarmee ook diens eigenaar (d.w.z. de persoon die als enige geacht wordt met dit account in te loggen. Een goed gebruik is om hiervoor een e-mailadres te gebruiken waarop de user van het account bereikbaar is.+}
CONCEPT UserID "een rij karakters (bijvoorbeeld het e-mailadres van de user), die een account identificeert binnen het systeem"
REPRESENT UserID TYPE ALPHANUMERIC

PURPOSE CONCEPT Password
{+Om het moeilijk te maken dat het Account van een zeker persoon door een ander wordt gebruikt, registreert het systeem wachtwoorden.
Door een wachtwoord geheim te houden ontstaat enige mate van zekerheid dat het systeem gebruikt word door (dan wel met medeweten van) de persoon op wiens naam het wachtwoord is geregistreerd.+}
CONCEPT Password "een rij karakters, die geheim gehouden kan worden door een persoon, en door die persoon gebruikt moet worden om toegang te krijgen tot het systeem"
REPRESENT Password TYPE PASSWORD

PURPOSE CONCEPT SESSION
{+Een persoon gebruikt een gegevensruimte (en heet dan 'user') door met een browser (bijv. Chrome of Firefox) het systeem te benaderen dat de gegegensruimte beheert. Als meerdere personen een gegevensruimte delen, moet het systeem de context van elk van hen kunnen onderscheiden, bijvoorbeeld om:
\begin{itemize}
\item de interactie 'klein' te houden, d.w.z. alleen gegevens te laten zien die voor hem/haar relevant zijn;
\item ervoor te zorgen dat een user niet ziet wat hij niet mag zien;
\item te kunnen bijhouden welke persoon, of welk(e) organisatie(onderdeel) verantwoordelijk is voor een zekere transactie;
\item automatisch gegevens betreffende de user of zijn context aan transacties toe te kunnen voegen
\end{itemize}
We gebruiken de term 'SESSION' of 'session' om de verzameling van gegevens betreffende één (actieve) user mee aan te geven. Deze term correspondeert met de gelijknamige term browsers gebruiken, nl. 'een verbinding (door de browser) met een webservice (die een URL heeft)'. Het systeem houdt één session bij voor elke actieve user, d.w.z. voor elke browser die het systeem benadert. Merk op dat dit in het bijzonder geldt als de user in verschillende tabbladen van dezelfde browser het systeem benadert - er is dan toch maar één session (en één user).
+}
CONCEPT SESSION "een verzameling van gegevens die de context beschrijven waarin één persoon het systeem gebruikt"

-----------------------------------------------------------
ENDCONTEXT