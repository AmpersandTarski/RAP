CONTEXT "SIAMv3 preview" IN ENGLISH
-- The stuff in this file may change; SIAMv3 may ultimately NOT be compatible with what is in here!!!!

--[[SIAMv3 emulation]]--
META "authors" "Rieks Joosten (rieks.joosten@tno.nl)"

--[UIDs]--
IDENT UIDs: UID(uidIssuer,uidUserid)
RELATION uidUserid[UID*UserID] [UNI,TOT] -- Identifier for the user in the realm of the IdP that issued it.
RELATION uidIssuer[UID*IdP]    [UNI]     -- Identifier for the third-party IdP that issues the uidUserid. If none is given, the UserID is issued by the application itself.

RELATION accUID[Account*UID] [INJ] -- A UID may serve as an identifier for an Account.
MEANING "An Account registers a UID for whatever the Account applies to"

--[PersonRefs]--
REPRESENT PersonRef TYPE ALPHANUMERIC
RELATION personRef[Person*PersonRef] [UNI]
MEANING "A textstring to refer to this person"

RELATION accPersonRef[Account*PersonRef] [UNI] 
MEANING "An Account may have a textstring that refers to the Person for which the account has attributes"

RELATION sessionPersonRef[SESSION*PersonRef] [UNI]
MEANING "In a SESSION, a textstring that refers to the user (i.e. the Person that acts 'at the other side') may be known."
ROLE ExecEngine MAINTAINS "Determine the personRef in a session"
RULE "Determine the personRef in a session": sessionAccount;accPersonRef |- sessionPersonRef
VIOLATION (TXT "{EX} InsPair;sessionPersonRef;SESSION;", SRC I, TXT ";PersonRef;", TGT I)
ROLE ExecEngine MAINTAINS "Undetermine the personRef in a session"
RULE "Undetermine the personRef in a session": (I /\ sessionAccount;sessionAccount~);sessionPersonRef |- sessionAccount;accPersonRef
VIOLATION (TXT "{EX} DelPair;sessionPersonRef;SESSION;", SRC I, TXT ";PersonRef;", TGT I)

--[Automating creation and maintenance of PersonRefs]--
IDENT SIAMPersonRefComputations: SIAMPersonRefComputation(siamcompFirstName,siamcompLastName)
RELATION siamcompFirstName[SIAMPersonRefComputation*FirstName]  [UNI]
RELATION siamcompLastName[SIAMPersonRefComputation*LastName]   [UNI]
RELATION siamcompPersonRef[SIAMPersonRefComputation*PersonRef]  [UNI]

ROLE ExecEngine MAINTAINS "Auto create SIAMPersonRefComputation"
RULE "Auto create SIAMPersonRefComputation": personFirstName~;personLastName |- siamcompFirstName~;siamcompLastName
VIOLATION (TXT "{EX} NewStruct;SIAMPersonRefComputation"
              ,TXT ";siamcompFirstName;SIAMPersonRefComputation;_NEW;FirstName;", SRC I
              ,TXT ";siamcompLastName;SIAMPersonRefComputation;_NEW;LastName;", TGT I
              ,TXT ";siamcompPersonRef;SIAMPersonRefComputation;_NEW;PersonRef;{php}'", SRC I, TXT "'.' '.'", TGT I, TXT "'"
          )

ROLE ExecEngine MAINTAINS "Auto maintain 'personRef' relation"
RULE "Auto maintain 'personRef' relation": 
 (personFirstName;siamcompFirstName~ /\ personLastName;siamcompLastName~);siamcompPersonRef |- personRef
VIOLATION (TXT "{EX} InsPair;personRef;Person;", SRC I, TXT ";PersonRef;", TGT I)

ROLE ExecEngine MAINTAINS "Auto maintain 'accPersonRef' relation"
RULE "Auto maintain 'accPersonRef' relation": accPerson;personRef |- accPersonRef
VIOLATION (TXT "{EX} InsPair;accPersonRef;Account;", SRC I, TXT ";PersonRef;", TGT I)

--[OrgRefs]--
accOrgRef :: Account * OrgRef [UNI] -- a text that refers to the organization associated with the account.
MEANING "An Account may have a textstring that refers to the Organization to which the Account is related"

sessionOrgRef :: SESSION * OrgRef [UNI]
MEANING "In a SESSION, a textstring that refers to the Organization ('at the other side') may be known."
ROLE ExecEngine MAINTAINS "Determine the OrgRef in a session"
RULE "Determine the OrgRef in a session": sessionAccount;accOrgRef |- sessionOrgRef
VIOLATION (TXT "{EX} InsPair;sessionOrgRef;SESSION;", SRC I, TXT ";OrgRef;", TGT I)
ROLE ExecEngine MAINTAINS "Clear the OrgRef in a session"
RULE "Clear the OrgRef in a session": (I /\ sessionAccount;sessionAccount~);sessionOrgRef |- sessionAccount;accOrgRef
VIOLATION (TXT "{EX} DelPair;sessionOrgRef;SESSION;", SRC I, TXT ";OrgRef;", TGT I)

--[Registration (Account creation)]--

RELATION loginCreateAccount[SESSION*SESSION] [PROP]
RULE "An account may only be created if it has not been previously registered": loginCreateAccount;loginUserid;accUserid~ |- -V
RULE "An account can only be created for users that are not logged in": loginCreateAccount /\ sessionAccount;sessionAccount~ |- -V
RULE "You must specify a username to create an account": loginCreateAccount |- loginUserid;loginUserid~
RULE "You must specify a password to create an account": loginCreateAccount |- registerPassword;registerPassword~

RELATION registerPassword[SESSION*Password] [UNI] -- cannot use `loginPassword`, as that may fire the login-rule before the account is actually created.
RELATION registerOrgRef[SESSION*OrgRef] [UNI] -- allow user to enter the organization that he works for.

ROLE ExecEngine MAINTAINS "Create Account upon request"
RULE "Create Account upon request":
      loginCreateAccount -- We create an account if:
   /\ -(sessionAccount;sessionAccount~)  -- we have an anonymous session
   /\ loginUserid;loginUserid~           -- and a userid is specified
   /\ registerPassword;registerPassword~ -- as well as a password
   /\ sessionPersonRef;sessionPersonRef~ -- and the users name.
|- (  loginUserid;accUserid~ 
   /\ registerPassword;accPassword~
   /\ sessionPersonRef;accPersonRef~
   );V
VIOLATION (TXT "{EX} NewStruct;Account"
               ,TXT ";accUserid;Account;_NEW;UserID;", SRC loginUserid
               ,TXT ";accPassword;Account;_NEW;Password;", TGT registerPassword
               ,TXT ";accOrgRef;Account;_NEW;OrgRef;", TGT registerOrgRef
               ,TXT ";accPersonRef;Account;_NEW;PersonRef;", TGT sessionPersonRef
               ,TXT ";sessionAccount;SESSION;", SRC I, TXT ";Account;_NEW" -- immediately login to prevent account to be automatically destroyed.
          ,TXT "{EX} DelPair;loginCreateAccount;SESSION;", SRC I, TXT ";SESSION;", TGT I
          ,TXT "{EX} DelPair;loginUserid;SESSION;", SRC I, TXT ";UserID;", TGT loginUserid
          ,TXT "{EX} DelPair;loginPassword;SESSION;", SRC I, TXT ";Password;", TGT loginPassword
          ,TXT "{EX} DelPair;registerPassword;SESSION;", SRC I, TXT ";Password;", TGT registerPassword
          )

--[Login and Registration Interface]--
{- BOX <PROPBUTTON> -- is a custom HTML Template (i.e. it is in the local templates/views directory)
   [ disabled : <expr1> -- The button is disabled when `expr1` has one or more target atoms.
   , property : <expr2> -- `expr2` **must be a [PROP]-type relation**; it gets populated whenever the button is clicked. 
   ]
-}

--[U/PW Login]--
loginUserid   :: SESSION * UserID   [UNI] -- Userid as specified by the user
loginPassword :: SESSION * Password [UNI] -- Password as specified by the user
loginReq :: SESSION * SESSION [PROP] -- User has to explicitly request a login
loginISOLevel :: SESSION * ISOLevel [UNI] -- Level of Assurance with which the login took place

ROLE ExecEngine MAINTAINS "InsPair sessionAuthISOLevel (MPTrx specific)"
RULE "InsPair sessionAuthISOLevel (MPTrx specific)": 
   (I /\ sessionAccount;sessionAccount~);loginISOLevel |- sessionAuthISOLevel
MEANING "We set sessionAuthISOLevel to whatever value is specified at login"
VIOLATION (TXT "{EX} InsPair;sessionAuthISOLevel;SESSION;", SRC I, TXT ";ISOLevel;", SRC loginISOLevel
          ,TXT "{EX} DelPair;loginISOLevel;SESSION;", SRC I, TXT ";ISOLevel;", SRC loginISOLevel
          )

ROLE ExecEngine MAINTAINS "Service U/PW Login request"
RULE "Service U/PW Login request": loginReq;(loginUserid;accUserid~ /\ loginPassword;accPassword~);accIsActive |- sessionAccount
MEANING "When a user is authenticated, the corresponding Account will become the sessionAccount (provided it is active)."
VIOLATION (TXT "{EX} InsPair;sessionAccount;SESSION;", SRC I, TXT ";Account;", TGT I
--        ,TXT "{EX} DelPair;loginUserid;SESSION;", SRC I, TXT ";UserID;", SRC loginUserid
          ,TXT "{EX} DelPair;loginPassword;SESSION;", SRC I, TXT ";Password;", SRC loginPassword -- Passwords moet je niet willen onthouden.
          ,TXT "{EX} DelPair;loginReq;SESSION;", SRC I, TXT ";SESSION;", SRC I
          )

{- Leave this interface out, until we can correctly (de)populate the menu bar with our items
INTERFACE "{U/PW Login}": "_SESSION"[SESSION] cRud COLS
   [ "Userid": loginUserid cRUd
   , "Password": loginPassword crUd -- crUd is needed for Passwords
   , " ": I cRud BOX <ROWSNL>
      [ "Login": I cRud BOX <PROPBUTTON> 
         [ property : loginReq cRUd 
         , disabled : I - (loginUserid;loginUserid~ /\ loginPassword;loginPassword~) cRud
   ]  ]  ]
-}

--[Set/Clear 'Developer' role]--
sessionDev :: SESSION * SESSION [PROP] -- Dev: Set 'Developer' role
ROLE ExecEngine MAINTAINS "Activate 'Developer' role"
RULE "Activate 'Developer' role": sessionDev |- sessionActiveRoles;'Developer';sessionActiveRoles~
VIOLATION (TXT "{EX} InsPair;sessionActiveRoles;SESSION;", SRC I, TXT ";Role;Developer")
ROLE ExecEngine MAINTAINS "Deactivate 'Developer' role"
RULE "Deactivate 'Developer' role": sessionActiveRoles;'Developer' |- sessionDev;sessionActiveRoles;'Developer'
VIOLATION (TXT "{EX} DelPair;sessionActiveRoles;SESSION;", SRC I, TXT ";Role;Developer")

ENDCONTEXT