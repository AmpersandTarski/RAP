version: '3.7'
# to visualize this docker-compose.yml file, run:
#      docker run --rm -it --name dcv -v $(pwd):/input pmsipilot/docker-compose-viz render -f -m image docker-compose.yml
# run it literally (change NOTHING!) and expect the result in docker-compose.png

volumes:
  rap3-data: 
  db-data:
  proxy-cert:

services:
  # the gatekeeper to the internet. It serves both http and https.
  proxy:
    build: ./HAProxy
    container_name: proxy
    restart: unless-stopped
    depends_on:
      - rap3
      - enroll
    networks:
      - rap3
      - enroll
    ports:
      - 80:80
      - 443:443
    volumes:
      - proxy-cert:/srv/is-certificate
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "100"
  rap3-user:
    image: rap3-student-proto:latest
    container_name: rap3-user
    build:
      context: RAP3USER
  rap3:
    image: ampersandtarski/ampersand-rap:2020
    container_name: rap3
    build:
      context: RAP3
    restart: unless-stopped
    depends_on:
      - db
    environment:
      - AMPERSAND_LOG_CONFIG=logging.yaml
      - AMPERSAND_DEBUG_MODE=true
      - AMPERSAND_PRODUCTION_MODE=false # false => e.g. enables database reset (in production mode not possible)
      - AMPERSAND_DBHOST=db # refers to database service below
      - AMPERSAND_DBUSER=ampersand
      - AMPERSAND_DBPASS=ampersand # TODO: place in .env file
      - AMPERSAND_DBNAME=rap3
      - AMPERSAND_SERVER_URL=https://${SERVER_HOST_NAME} # from .env file
    volumes:
      - rap3-data:/var/www/data
    networks:
      - rap3
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "100"

  # demo application Enrollment
  enroll:
    image: ampersandtarski/enroll:latest
    container_name: enroll
    build:
      context: Demos/Enroll
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - enroll
    environment:
      - AMPERSAND_LOG_CONFIG=logging.yaml
      - AMPERSAND_DEBUG_MODE=true
      - AMPERSAND_PRODUCTION_MODE=false # false => e.g. enables database reset (in production mode not possible)
      - AMPERSAND_DBHOST=db # refers to database service below
      - AMPERSAND_DBUSER=ampersand
      - AMPERSAND_DBPASS=ampersand # TODO: place in .env file
      - AMPERSAND_DBNAME=enroll
      - AMPERSAND_SERVER_URL=https://${SERVER_HOST_NAME} # from .env file
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "100"
 
  db:
    container_name: rap3-db
    image: mariadb:10.4
    restart: unless-stopped
    command: ["--lower-case-table-names=1", "--sql-mode=ANSI,TRADITIONAL"]
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD} # from .env file
      - MYSQL_USER=${MYSQL_USER} # from .env file
      - MYSQL_PASSWORD=${MYSQL_PASSWORD} # from .env file
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - rap3
      - db
      - enroll
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "100"

  phptools:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: db # refers to database service above
    container_name: phptools
    restart: unless-stopped
    depends_on:
      - db
    ports:
      - "8080:80"
    networks:
      - db

  # vscode:
  #   image: codercom/code-server
  #   command: --password=zoepersecreet
  #   ports:
  #     - "8443:8443"
  #   volumes:
  #     - ./volumes/scripts:/var/www/html/RAP3/data/scripts

networks:
  rap3:
  db:
  enroll: